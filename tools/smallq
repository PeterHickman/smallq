#!/usr/bin/env ruby

require 'yaml'

$LOAD_PATH << './lib'

require 'smallq/server'
require 'smallq/config'
require 'smallq/logger'
require 'smallq/queue_manager'

filename = ARGV[0]

config = Smallq::Config.load(filename)

if config['server']['daemon']
  config['logger']['console'] = false
  config['logger']['enabled'] = true

  puts "Server starting daemonised, pid in logfile (logger enabled, console disabled)"

  Process.daemon(true, false)
end

l = Smallq::Logger.new(config['logger'])
q = Smallq::QueueManager.new(config['journal'], l)
s = Smallq::Server.new(config['server'], l, q)

begin
  s.run
rescue => e
  l.log('SERVER', "Exception: #{e}")
rescue Interrupt
  l.log('SERVER', 'Server interupted, shutting down')
ensure
  l.log('SERVER', 'Final snapshot (if enabled)')
  q.take_snapshot
  l.log('SERVER', 'Server terminated')
end
